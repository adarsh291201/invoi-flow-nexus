@model dynamic
@functions {
    string GetField(string key) {
        object val;
        var dict = Model as IDictionary<string, object>;
        if (dict != null && dict.TryGetValue(key, out val) && val != null && !string.IsNullOrEmpty(val.ToString()))
            return val.ToString();
        if (Model.CommonData != null) {
            var commonDict = Model.CommonData as IDictionary<string, object>;
            if (commonDict != null && commonDict.TryGetValue(key, out val) && val != null && !string.IsNullOrEmpty(val.ToString()))
                return val.ToString();
        }
        return "";
    }
    string FormatCurrency(object value) {
        if (value == null) return "-";
        decimal d;
        if (decimal.TryParse(value.ToString(), out d))
            return string.Format("${0:N2}", d);
        return value.ToString();
    }
}
<html>
<head>
    <style>
        body { font-family: Arial, sans-serif; font-size: 12px; color: #222; margin: 0; padding: 0; }
        .invoice-container { max-width: 900px; margin: 0 auto; border: 1px solid #222; background: #fff; }
        .header-bar { position: relative; height: 90px; min-height: 90px; }
        .header-logo { position: absolute; top: 0; right: 0; width: 320px; height: 75px; z-index: 2; }
        .header-left { position: absolute; top: 0; left: 0; padding: 18px 0 0 30px; z-index: 3; width: 60%; }
        .header-left h2 { margin: 0 0 5px 0; font-size: 22px; font-weight: bold; letter-spacing: 1px; }
        .header-left .address { font-size: 13px; line-height: 1.3; }
        .invoice-title-box { position: absolute; top: 18px; right: 0; background: #1a366c; color: #fff; padding: 8px 18px; font-weight: bold; font-size: 16px; letter-spacing: 1px; border-radius: 2px 0 0 2px; z-index: 4; min-width: 160px; text-align: center; }
        .meta-table { width: 100%; border-collapse: collapse; margin-top: 20px; }
        .meta-table td { padding: 6px 12px; border: none; font-size: 13px; vertical-align: top; }
        .meta-label { color: #d89149; font-weight: bold; font-size: 12px; }
        .meta-value { color: #222; font-size: 13px; }
        .billto-section { margin: 18px 0 0 30px; font-size: 13px; }
        .billto-label { color: #d89149; font-weight: bold; }
        .billto-value { margin-top: 2px; white-space: pre-line; }
        .billing-period { color: #d89149; font-weight: bold; margin: 18px 0 0 30px; font-size: 13px; }
        .billing-period-value { color: #222; font-weight: normal; margin-left: 6px; }
        .invoice-table { width: 97%; margin: 18px auto 0 auto; border-collapse: collapse; }
        .invoice-table th { background: #d89149; color: #222; border: 1px solid #222; padding: 6px 8px; font-size: 12px; font-weight: bold; }
        .invoice-table td { border: 1px solid #222; padding: 6px 8px; font-size: 12px; text-align: center; }
        .totals-row { background: #1a366c; color: #fff; font-weight: bold; font-size: 14px; }
        .totals-label { text-align: right; padding-right: 18px; }
        .footer { margin: 30px 0 0 0; padding: 12px 30px; font-size: 12px; color: #222; border-top: 2px solid #d89149; }
        .signature { float: right; color: #d89149; font-weight: bold; margin-top: 18px; }
    </style>
</head>
<body>
<div class="invoice-container">
    <div class="header-bar">
        <div class="header-left">
            <h2>@GetField("companyName")</h2>
            <div class="address">@GetField("companyAddress")<br/>@GetField("phoneNumber")</div>
        </div>
        <div class="header-logo">
            <!-- SVG LOGO -->
            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="320" height="75">
                <path d="M0 0 C179.85 0 359.7 0 545 0 C545 24.75 545 49.5 545 75 C365.15 75 185.3 75 0 75 C0 50.25 0 25.5 0 0 Z " fill="#D89149" transform="translate(0,0)"/>
                <path d="M0 0 C85.14 0 170.28 0 258 0 C258 23.43 258 46.86 258 71 C203.15307986 71.22605872 148.30627149 71.40509316 93.45897786 71.51065329 C86.98396297 71.52316038 80.50894903 71.5361036 74.03393555 71.54931641 C72.1003453 71.55325106 72.1003453 71.55325106 70.12769262 71.55726521 C49.25456366 71.60077998 28.38171008 71.67962651 7.5087445 71.77152796 C-13.90841646 71.86503908 -35.32543319 71.92058691 -56.74278992 71.94088495 C-69.9589157 71.95460718 -83.17426313 71.9979482 -96.39014932 72.07916467 C-105.45246426 72.13201946 -114.51437676 72.14800224 -123.57683466 72.13501377 C-128.80594434 72.12860754 -134.03369392 72.13843406 -139.2625618 72.19205475 C-144.05337027 72.24082395 -148.84190815 72.24311536 -153.63282254 72.20898895 C-155.36252775 72.2047734 -157.09237628 72.21737817 -158.82180063 72.24883182 C-167.33659733 72.39464423 -173.60917643 72.23178301 -180.29519939 66.23734093 C-181.8975176 64.52276044 -183.46725767 62.77705116 -185 61 C-186.65 59.35 -188.3 57.7 -190 56 C-106.51 55.67 -23.02 55.34 63 55 C53.9293011 47.13872762 44.8541709 39.28693945 35.73388672 31.48388672 C32.8210595 28.99104473 29.91068779 26.49533926 27 24 C26.42822021 23.50999512 25.85644043 23.01999023 25.26733398 22.51513672 C22.25002437 19.92935627 19.23368869 17.34245089 16.21875 14.75390625 C15.28482422 13.95243164 15.28482422 13.95243164 14.33203125 13.13476562 C13.15204596 12.12209168 11.97233671 11.10909596 10.79296875 10.09570312 C10.25285156 9.63228516 9.71273437 9.16886719 9.15625 8.69140625 C8.63675781 8.24555176 8.11726562 7.79969727 7.58203125 7.34033203 C5.93514265 5.94505141 4.26523213 4.58050728 2.59375 3.21484375 C1.7378125 2.48394531 0.881875 1.75304687 0 1 C0 0.67 0 0.34 0 0 Z " fill="#0E4C87" transform="translate(286,4)"/>
                <path d="M0 0 C179.85 0 359.7 0 545 0 C545 24.75 545 49.5 545 75 C544.67 75 544.34 75 544 75 C544 51.57 544 28.14 544 4 C278.185 4.495 278.185 4.495 7 5 C12.61 9.29 18.22 13.58 24 18 C28.9375 22.3125 28.9375 22.3125 30.984375 24.1875 C35.81946443 28.53533235 41.02476768 32.45853458 46.1484375 36.45703125 C46.70184814 36.89055908 47.25525879 37.32408691 47.82543945 37.77075195 C48.99600927 38.6833522 50.17176994 39.58932835 51.35229492 40.48901367 C54.72927869 43.09134883 57.86199595 45.78990359 60.90234375 48.78125 C68.85032714 56.36604486 74.20623385 59.9954135 85.4375 59.8125 C86.38302734 59.78655762 87.32855469 59.76061523 88.30273438 59.73388672 C94.23970377 59.64237071 97.44452183 60.01058819 102 64.25 C103.36377831 65.80718687 104.70090083 67.38845926 106 69 C107.18128268 70.03181426 108.38601861 71.03823362 109.625 72 C110.40875 72.66 111.1925 73.32 112 74 C112 74.33 112 74.66 112 75 C75.04 75 38.08 75 0 75 C0 50.25 0 25.5 0 0 Z " fill="#E7E7E7" transform="translate(0,0)"/>
            </svg>
        </div>
    </div>
    <div style="clear:both;"></div>
    <div class="invoice-title-box" style="margin-top: 30px;">INVOICE<br/>@GetField("invoiceNumber")</div>
     <div class="billto-section">
        <span class="billto-label">Bill To:</span><br/>
        <span class="billto-value">@GetField("billTo")</span>
    </div>
    <div class="meta-table" style="margin-top: 40px; width: 100%; display: flex; flex-direction: row; flex-wrap: wrap; justify-content: space-between; padding: 0 30px;">
        <div style="flex: 1; min-width: 200px;">
            <span class="meta-label">Invoice Date</span><br/><span class="meta-value">@GetField("invoiceDate")</span>
        </div>
        <div style="flex: 1; min-width: 200px;">
            <span class="meta-label">Payment Terms</span><br/><span class="meta-value">@GetField("paymentTerms")</span>
        </div>
        <div style="flex: 1; min-width: 200px;">
            <span class="meta-label">PO Ref number</span><br/><span class="meta-value">@GetField("invoiceNumber")</span>
        </div>
    </div>
   
    <div class="billing-period">
        Billing Period:<span class="billing-period-value">@GetField("billingPeriod")</span>
    </div>
    @{
        var templateKey = Model.Template;
        var tableRows = ((IDictionary<string, object>)Model.TemplateData)[templateKey] as IEnumerable<dynamic>;
        var columns = new List<string>();
        if (tableRows != null && tableRows.Any())
        {
            var firstRow = tableRows.First();
            foreach (var prop in (IDictionary<string, object>)firstRow)
            {
                if (prop.Key != "id") // Remove 'id' column
                {
                    columns.Add(prop.Key);
                }
            }
        }
        int minRows = 5;
        int rowCount = tableRows != null ? tableRows.Count() : 0;
        var totals = ((IDictionary<string, object>)Model.Totals);
    }
    @if (columns.Count > 0)
    {
        <table class="invoice-table">
            <tr>
                @foreach (var col in columns)
                {
                    string camelCol = char.ToUpper(col[0]) + col.Substring(1);
                    for (int i = 1; i < camelCol.Length; i++)
                    {
                        if (char.IsUpper(camelCol[i]) && char.IsLower(camelCol[i - 1]))
                        {
                            camelCol = camelCol.Substring(0, i) + camelCol[i].ToString().ToUpper() + camelCol.Substring(i + 1);
                        }
                    }
                    <th>@camelCol</th>
                }
            </tr>
            @if (tableRows != null)
            {
                foreach (var row in tableRows)
                {
                    <tr>
                        @foreach (var col in columns)
                        {
                            var val = ((IDictionary<string, object>)row)[col];
                            if (col.ToLower().Contains("amount") || col.ToLower().Contains("rate"))
                            {
                                <td style="text-align: right;">@FormatCurrency(val)</td>
                            }
                            else
                            {
                                <td>@val</td>
                            }
                        }
                    </tr>
                }
            }
            @for (int i = rowCount; i < minRows; i++)
            {
                <tr>
                    @foreach (var col in columns)
                    {
                        <td>&nbsp;</td>
                    }
                </tr>
            }
        </table>
    }
    <table style="width: 97%; margin: 0 auto; border-collapse: collapse;">
        <tr class="totals-row">
            <td class="totals-label" colspan="@(columns.Count > 1 ? columns.Count - 1 : 1)">Total</td>
            <td style="text-align: right;">@FormatCurrency(totals != null && totals.ContainsKey("total") ? totals["total"] : GetField("total"))</td>
        </tr>
    </table>
    <div class="signature">#NAME#</div>
    <div class="footer">Email to invoice@pal.tech in case of any queries</div>
</div>
</body>
</html> 